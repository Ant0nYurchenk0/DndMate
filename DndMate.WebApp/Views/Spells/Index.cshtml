@model DndMate.WebApp.ViewModels.SpellListViewModel
@using DndMate.WebApp.Enums
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Html.Partial("_GamespaceTools", Model.Gamespace)
<div class="gamespace-content">

    <div class="row">
        <div class="col-2">
            <h2>Spells</h2>
        </div>
        <div class="col-md-8 col-sm-6"></div>
        <div class="col-md-2 col-sm-4">
            <a class="btn btn-primary add-btn" href="@Url.Action("Create", "Spells", new {gamespaceId = Model.Gamespace.Gamespace.Id})">Add new</a>
        </div>
    </div>
    <br />
    <ul class="nav nav-tabs">
        @for (int i = 0; i < 10; i++)
        {
            var active = string.Empty;
            if (i == 0)
            {
                active = "active";
            }

            <li class="nav-item">
                <a class="nav-link @(active)" data-bs-toggle="tab" href="#level@(i)">Level @i</a>
            </li>
        }
    </ul>
    <div id="myTabContent" class="tab-content">
        @for (int i = 0; i < 10; i++)
        {
            var active = string.Empty;
            if (i == 0)
            {
                active = "active show";
            }
            <div class="tab-pane fade @(active)" id="level@(i)">
                @{
                    <br />
                    if (Model.Gamespace.Character.CharacterClass != CharacterClass.Master)
                    {

                        <h4>My Spells: </h4>
                        var assignedSpells = Model.AssignedSpells.Where(s => s.Level == i);
                        if (assignedSpells.Count() == 0)
                        {

                            <p class="text-muted">Nothing here.</p>
                        }
                        else
                        {
                            <div class="accordion" id="assignedSpells@(i)">
                                @foreach (var spell in assignedSpells)
                                {
                                    <div class="accordion-item">
                                        <h2 class="accordion-header" id="headingOne">
                                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#assignedinfo@(spell.Id)" aria-expanded="false" aria-controls="collapseOne">
                                                @spell.Name
                                            </button>
                                        </h2>
                                        <div id="assignedinfo@(spell.Id)" class="accordion-collapse collapse" aria-labelledby="headingOne" data-bs-parent="#assignedSpells@(i)" style="">
                                            <div class="accordion-body">
                                                <table class="table-borderless">
                                                    <tbody>
                                                        <tr>
                                                            <th scope="row">Level</th>
                                                            <td>@spell.Level</td>
                                                        </tr>
                                                        <tr>
                                                            <th scope="row">Range</th>
                                                            <td>@spell.Range</td>
                                                        </tr>
                                                        <tr>
                                                            <th scope="row">Duration</th>
                                                            <td>@spell.Duration</td>
                                                        </tr>
                                                        <tr>
                                                            <th scope="row">Components</th>
                                                            <td>@spell.Components</td>
                                                        </tr>
                                                        <tr>
                                                            <th scope="row">Casting time</th>
                                                            <td>@spell.CastingTime</td>
                                                        </tr>
                                                        <tr>
                                                            <th scope="row">Description:</th>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                                <p class="description">
                                                    @spell.Description
                                                </p>
                                                @{
                                                    var disabled = string.Empty;
                                                    switch (spell.Level)
                                                    {
                                                        case 1:
                                                            if (Model.Gamespace.Character.Level1Used == Model.Gamespace.Character.Level1)
                                                            {
                                                                disabled = "disabled";
                                                            }
                                                            break;
                                                        case 2:
                                                            if (Model.Gamespace.Character.Level2Used == Model.Gamespace.Character.Level2)
                                                            {
                                                                disabled = "disabled";
                                                            }
                                                            break;
                                                        case 3:
                                                            if (Model.Gamespace.Character.Level3Used == Model.Gamespace.Character.Level3)
                                                            {
                                                                disabled = "disabled";
                                                            }
                                                            break;
                                                        case 4:
                                                            if (Model.Gamespace.Character.Level4Used == Model.Gamespace.Character.Level4)
                                                            {
                                                                disabled = "disabled";
                                                            }
                                                            break;
                                                        case 5:
                                                            if (Model.Gamespace.Character.Level5Used == Model.Gamespace.Character.Level5)
                                                            {
                                                                disabled = "disabled";
                                                            }
                                                            break;
                                                        case 6:
                                                            if (Model.Gamespace.Character.Level6Used == Model.Gamespace.Character.Level6)
                                                            {
                                                                disabled = "disabled";
                                                            }
                                                            break;
                                                        case 7:
                                                            if (Model.Gamespace.Character.Level7Used == Model.Gamespace.Character.Level7)
                                                            {
                                                                disabled = "disabled";
                                                            }
                                                            break;
                                                        case 8:
                                                            if (Model.Gamespace.Character.Level8Used == Model.Gamespace.Character.Level8)
                                                            {
                                                                disabled = "disabled";
                                                            }
                                                            break;
                                                        case 9:
                                                            if (Model.Gamespace.Character.Level9Used == Model.Gamespace.Character.Level9)
                                                            {
                                                                disabled = "disabled";
                                                            }
                                                            break;
                                                    }
                                                }
                                                <a class="btn btn-outline-success @disabled" href="@Url.Action("UseSlot", "Characters", new {id = Model.Gamespace.Character.Id, level=spell.Level.ToString(), page="1"})">Use</a>
                                                <a class="btn btn-outline-warning" href="@Url.Action("Edit", "Spells", new {id = spell.Id})">Edit</a>
                                                <a class="btn btn-outline-dark" href="@Url.Action("DropSpell", "Characters", new {charId=Model.Gamespace.Character.Id, spellId = spell.Id})">Drop</a>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>

                        }
                        <hr />
                    }
                    <h4>All Spells: </h4>
                    var spells = Model.Spells.Where(s => s.Level == i);
                    if (spells.Count() == 0)
                    {

                        <p class="text-muted">Nothing here.</p>
                    }
                    else
                    {
                        <div class="accordion" id="spells@(i)">
                            @foreach (var spell in spells)
                            {
                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="headingOne">
                                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#info@(spell.Id)" aria-expanded="false" aria-controls="collapseOne">
                                            @spell.Name
                                        </button>
                                    </h2>
                                    <div id="info@(spell.Id)" class="accordion-collapse collapse" aria-labelledby="headingOne" data-bs-parent="#spells@(i)" style="">
                                        <div class="accordion-body">
                                            <table class="table-borderless">
                                                <tbody>
                                                    <tr>
                                                        <th scope="row">Level</th>
                                                        <td>@spell.Level</td>
                                                    </tr>
                                                    <tr>
                                                        <th scope="row">Range</th>
                                                        <td>@spell.Range</td>
                                                    </tr>
                                                    <tr>
                                                        <th scope="row">Duration</th>
                                                        <td>@spell.Duration</td>
                                                    </tr>
                                                    <tr>
                                                        <th scope="row">Components</th>
                                                        <td>@spell.Components</td>
                                                    </tr>
                                                    <tr>
                                                        <th scope="row">Casting time</th>
                                                        <td>@spell.CastingTime</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                            <p class="description">
                                                @spell.Description
                                            </p>
                                            @if (Model.Gamespace.Character.CharacterClass == CharacterClass.Master)
                                            {

                                                <span class="dropdown">
                                                    <a class="btn btn-outline-secondary dropdown-toggle" href="#" id="charactersList" data-bs-toggle="dropdown">
                                                        Assign spell to
                                                    </a>
                                                    <ul class="dropdown-menu" role="menu">
                                                        @foreach (var character in Model.Gamespace.Characters)
                                                        {
                                                            if (character.CharacterClass != CharacterClass.Master)
                                                            {

                                                                <li>
                                                                    <a href="@Url.Action("AssignSpell", "Characters", new {spellId = spell.Id, charId = character.Id})" class="dropdown-item">@character.Name</a>
                                                                </li>
                                                            }
                                                        }
                                                    </ul>
                                                </span>
                                                <a class="btn btn-outline-warning" href="@Url.Action("Edit", "Spells", new {id = spell.Id})">Edit</a>
                                                <a class="btn btn-outline-danger" href="@Url.Action("Delete", "Spells", new {id = spell.Id})">Delete</a>
                                            }
                                            else
                                            {
                                                <a class="btn btn-outline-info" href="@Url.Action("AssignSpell", "Characters", new {charId=Model.Gamespace.Character.Id, spellId = spell.Id})">Get</a>
                                                <a class="btn btn-outline-warning" href="@Url.Action("Edit", "Spells", new {id = spell.Id})">Edit</a>
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                }
            </div>
        }
    </div>
</div>
